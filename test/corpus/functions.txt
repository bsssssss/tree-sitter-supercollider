==================
simple function definition no arguments
==================
f = {};

---
(source_file 
  (function_definition 
    (variable 
      (environment_var ))
    (function_block )))

==================
Add two numbers in function with piped args
==================
f = {|oneArg=10, anotherArg=2| oneArg+anotherArg; };

---

(source_file 
  (function_definition 
    (variable 
      (environment_var ))
    (function_block 
      (parameter_list 
        (argument 
          (identifier )
          (literal 
            (number 
              (integer ))))
        (argument 
          (identifier )
          (literal 
            (number 
              (integer )))))
      (binary_expression 
        left: (variable 
          (local_var 
            (identifier )))
        right: (variable 
          (local_var 
            (identifier )))))))
==================
Add two numbers in function with arg list
==================
f = {arg oneArg=10, anotherArg=2; oneArg+anotherArg; };

---

(source_file 
  (function_definition 
    (variable 
      (environment_var ))
    (function_block 
      (parameter_list 
        (argument 
          (identifier )
          (literal 
            (number 
              (integer ))))
        (argument 
          (identifier )
          (literal 
            (number 
              (integer )))))
      (binary_expression 
        left: (variable 
          (local_var 
            (identifier )))
        right: (variable 
          (local_var 
            (identifier )))))))

==================
Class method calls, explicit
==================
SinOsc.ar(freq: 441, mul:0.25);
Array.new;

---
(source_file 
  (function_call 
    (class )
    (class_method_call 
      (class_method_name )
      (parameter_call_list 
        (argument_calls 
          (named_argument 
            (identifier )
            (literal 
              (number 
                (integer )))))
        (argument_calls 
          (named_argument 
            (identifier )
            (literal 
              (number 
                (float))))))))
  
  (function_call 
    (class )
    (class_method_call 
      (class_method_name )))

)

==================
Class method calls, implicit
==================

Synth();
Synth(1,3,2);

---
(source_file 

(function_call 
	 (class )
	 (class_method_call ))

  (function_call 
    (class )
    (class_method_call 
      (parameter_call_list 
        (argument_calls 
          (unnamed_argument 
            (literal 
              (number 
                (integer )))))
        (argument_calls 
          (unnamed_argument 
            (literal 
              (number 
                (integer )))))
        (argument_calls 
          (unnamed_argument 
            (literal 
              (number 
                (integer )))))))))

==================
Instance method (linlin on a float)
==================
0.5.linlin(0.0,1.0,1.0,10.0);
---
(source_file 
  (function_call 
    (receiver 
      (literal 
        (number 
          (float ))))
    (instance_method_call 
      (method_name )
      (parameter_call_list 
        (argument_calls 
          (unnamed_argument 
            (literal 
              (number 
                (float )))))
        (argument_calls 
          (unnamed_argument 
            (literal 
              (number 
                (float )))))
        (argument_calls 
          (unnamed_argument 
            (literal 
              (number 
                (float )))))
        (argument_calls 
          (unnamed_argument 
            (literal 
              (number 
                (float)))))))))

